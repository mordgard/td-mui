{"version":3,"sources":["utils/id-generator.js","components/bottom-bar/bottom-bar.jsx","components/top-bar/top-bar.jsx","components/todo-item/todo-item.jsx","components/todo-list/todo-list.jsx","app.jsx","index.js"],"names":["ID","Math","random","toString","substr","useStyles","makeStyles","theme","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","BottomBar","_ref","counterTasks","onAdd","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","_useState3","_useState4","inputValue","setInputValue","classes","allTasks","length","doneTasks","filter","item","checked","handleClose","react_default","a","createElement","Fragment","CssBaseline","AppBar","color","className","Toolbar","IconButton","Search_default","Fab","aria-label","onClick","Add_default","Typography","variant","Dialog","onClose","aria-labelledby","fullWidth","maxWidth","DialogContent","TextField","autoFocus","id","label","type","value","onChange","e","target","handleChange","DialogActions","Button","HideOnScroll","props","children","window","trigger","useScrollTrigger","undefined","Slide","appear","direction","in","button","marginLeft","container","padding","TopBar","items","itemsStatus","onDelete","disabled","some","Container","importantColor","blue","TodoItem","text","isImportant","toggleCheck","toggleImportant","Box","mb","Paper","ListItem","style","backgroundColor","Checkbox","ListItemText","primary","textDecoration","ListItemSecondaryAction","Switch","edge","inputProps","TodoList","todoItems","List","map","_ref2","key","App","setTodoItems","updatedState","mt","p","concat","toConsumableArray","isDone","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.25cc9c9c.chunk.js","sourcesContent":["function ID() {\n  return (\n    \"_\" +\n    Math.random()\n    .toString(36)\n    .substr(2, 9)\n  );\n};\n\nexport default ID;","import React, { useState } from \"react\";\n\n// Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    top: \"auto\",\n    bottom: 0\n  },\n  grow: {\n    flexGrow: 1\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\"\n  }\n}));\n\nexport default function BottomBar({ counterTasks, onAdd }) {\n  const [open, setOpen] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const classes = useStyles();\n  const allTasks = counterTasks.length; // Всего задач\n  const doneTasks = counterTasks.filter(item => {\n    return item.checked === true;\n  }).length;\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton color=\"inherit\">\n            <SearchIcon />\n          </IconButton>\n          <Fab\n            color=\"secondary\"\n            aria-label=\"Add\"\n            className={classes.fabButton}\n            onClick={handleClickOpen}\n          >\n            <AddIcon />\n          </Fab>\n          <div className={classes.grow} />\n          <Typography variant=\"body1\">\n            Done: {doneTasks}/{allTasks}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n        maxWidth=\"sm\"\n      >\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Task\"\n            type=\"email\"\n            value={inputValue}\n            fullWidth\n            onChange={e => handleChange(e)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              onAdd(inputValue);\n              handleClose();\n              setInputValue(\"\");\n            }}\n            color=\"primary\"\n          >\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React from \"react\";\n\n// Material UI\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Container from \"@material-ui/core/Container\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.node.isRequired,\n  window: PropTypes.func\n};\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginLeft: \"auto\"\n  },\n  container: {\n    padding: 0\n  }\n}));\n\nexport default function TopBar(props) {\n  const classes = useStyles();\n  const items = props.itemsStatus;\n  const isSomeChecked = () => {\n    return items.some(item => item.checked === true);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <HideOnScroll {...props}>\n        <AppBar color=\"default\">\n          <Toolbar>\n            <Typography variant=\"h6\">Todo List</Typography>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              onClick={props.onDelete}\n              disabled={isSomeChecked() ? false : true}\n            >\n              Delete Selected\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n      <Container className={classes.container}>{props.children}</Container>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\n// Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport blue from \"@material-ui/core/colors/blue\";\n\nconst importantColor = blue[100];\n\nexport default function TodoItem({\n  id,\n  text,\n  checked,\n  isImportant,\n  toggleCheck,\n  toggleImportant\n}) {\n  return (\n    <Box mb={1}>\n      <Paper>\n        <ListItem\n          style={isImportant ? { backgroundColor: importantColor } : null}\n        >\n          <Checkbox checked={checked} onChange={toggleCheck} />\n          <ListItemText\n            primary={text}\n            style={checked ? { textDecoration: \"line-through\" } : null}\n          />\n          <ListItemSecondaryAction>\n            <Switch\n              edge=\"end\"\n              onChange={toggleImportant}\n              checked={isImportant}\n              inputProps={{ \"aria-labelledby\": \"switch-list-label-bluetooth\" }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n      </Paper>\n    </Box>\n  );\n}\n","import React from \"react\";\n\n// Components\nimport TodoItem from \"../todo-item/todo-item\";\n\n// Material UI\nimport List from \"@material-ui/core/List\";\n\nexport default function TodoList({ todoItems, toggleCheck, toggleImportant }) {\n  return (\n    <List>\n      {todoItems.map(({ id, text, checked, isImportant }) => {\n        return (\n          <TodoItem\n            key={id}\n            id={id}\n            text={text}\n            checked={checked}\n            isImportant={isImportant}\n            toggleCheck={() => toggleCheck(id)}\n            toggleImportant={() => toggleImportant(id)}\n          />\n        );\n      })}\n    </List>\n  );\n}\n","import React, { useState } from \"react\";\nimport ID from \"./utils/id-generator\";\n\n// Components\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport BottomBar from \"./components/bottom-bar/bottom-bar\";\nimport TopBar from \"./components/top-bar/top-bar\";\nimport TodoList from \"./components/todo-list/todo-list\";\n\n// Material UI\nimport Box from \"@material-ui/core/Box\";\n\nfunction App() {\n  const [todoItems, setTodoItems] = useState([\n    {\n      id: ID(),\n      text: \"some text\",\n      checked: false,\n      isImportant: false\n    },\n    {\n      id: ID(),\n      text: \"some text\",\n      checked: false,\n      isImportant: false\n    },\n    {\n      id: ID(),\n      text: \"some text\",\n      checked: false,\n      isImportant: true\n    },\n    {\n      id: ID(),\n      text: \"some text\",\n      checked: false,\n      isImportant: false\n    },\n    {\n      id: ID(),\n      text: \"some text\",\n      checked: false,\n      isImportant: false\n    },\n    {\n      id: ID(),\n      text: \"some text\",\n      checked: false,\n      isImportant: false\n    },\n    {\n      id: ID(),\n      text: \"some text\",\n      checked: false,\n      isImportant: true\n    },\n    {\n      id: ID(),\n      text: \"some text\",\n      checked: false,\n      isImportant: false\n    },\n    {\n      id: ID(),\n      text: \"some text\",\n      checked: false,\n      isImportant: false\n    },\n    {\n      id: ID(),\n      text: \"some text\",\n      checked: false,\n      isImportant: false\n    }\n  ]);\n\n  const handleToggleCheck = id => {\n    const updatedState = todoItems.map(item => {\n      if (item.id === id) item.checked = !item.checked;\n      return item;\n    });\n    setTodoItems(updatedState);\n  };\n\n  const handleToggleImportant = id => {\n    const updatedState = todoItems.map(item => {\n      if (item.id === id) item.isImportant = !item.isImportant;\n      return item;\n    });\n    setTodoItems(updatedState);\n  };\n\n  const handleDelete = () => {\n    const updatedState = todoItems.filter(item => item.checked !== true);\n    setTodoItems(updatedState);\n  };\n\n  const handleAdd = text => {\n    const updatedState = [\n      ...todoItems,\n      {\n        id: ID(),\n        text: text,\n        isDone: false,\n        isImportant: false\n      }\n    ];\n    setTodoItems(updatedState);\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <TopBar onDelete={handleDelete} itemsStatus={todoItems}>\n        <Container maxWidth=\"sm\">\n          <Box mt={2} mb={8} p={0}>\n            <TodoList\n              todoItems={todoItems}\n              toggleCheck={handleToggleCheck}\n              toggleImportant={handleToggleImportant}\n            />\n          </Box>\n        </Container>\n      </TopBar>\n      <BottomBar counterTasks={todoItems} onAdd={handleAdd} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}